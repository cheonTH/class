[환경변수]
프로그램이 컴퓨터에서 동작하는 방식에 영향을 미치는 동적인 값들의 모임

jdk를 윈도우가 인식 못할 때
환경변수를 설정해주면 됨

java8 , 11, 17, 21

이미 만들어진 프로젝트의 경우는 8버전일 수 있음
새로 시작하는 경우는 11, 17을 사용할 수도 있음

LTS(Long Term Service)
- 장기간 안정적인 지원을 받을 수 있는 버전
- 실무에선느 LTS버전을  선호하는 경향이 있음
- 보안 패치와 성능개선을 지속적으로 받을 수 있다는 장점이 있기 때문

자바는 클래스라는 파일에 코드를 작성
관련된 기능이 있는 파일들끼리 묶어서 보관 -> 패키지

while
-몇번 반복해야 할지 모를때 사용하면 유용
-Ex) 숫자 맞추기 퀴즈(몇번만에 맞출 수 있나)
-조건을 검증하고 반복을 실행

do-while
반복을 1회 실행을 하고 조건을 검증

필드
ㄴ> 일반 필드 -> 객체마다의 상태(이름, 나이 ,직업, 키 등... 서로다른 객체)
ㄴ> 정적 필드 -> 객체 공통의 상태(눈, 코, 입, 귀, 손가락 등...)

메서드
ㄴ> 메서드는 메서드 안에서 정의할 수 없음
ㄴ> 메서드는 메서드 안에서만 호출할 수 있음

public: 같은 프로젝트 내에서 접근가능
private: 현재 클래스에서만 접근 가능
protected: 상속관계에서만 접근 가능
default: 현재 패키지에서만 접근 가능

반환형
반환값의 타입을 결정하는 키워드
반환형으로 올수있는 타입은 int, boolean, char 등 과 같은 기본자료형도 되고 개발자가 만든 클래스도 가능

상속
부모클래스 - 상위 개념, 일반적인 개념
자식클래스 - 하위개념, 구체적인 개념

extends키워드를 사용해야 자식관계가 성립이 됨
자식클래스 extends 부모클래스{

}

상속관계가 성립이 되면 객체가 만들어졌을때 부모의 필드나 메서드를 사용할 수 있음
ㄴ>자식의 생성자가 호출 될 때 부모의 생성자가 먼저 호출되기 때문

this -> 객체 자기 자신을 참조하는 변수
super -> 부모를 참조하는 변수

Child(){
   super(); -> 부모생성자의 호출
}

부모의 생성자가 매개변수를 가진다면
Parent(String name, int age){
   this.name = name;
   this.age = age
}

Child(String name, int age){
   super(name, age) -> 부모생성자의 호출(생력이 불가능)
}

오버라이드(Override)
부모에 정의된 메서드를 자식클래스가 재정의하는 것
오버라이드 규칙
1. 부모클래스의 메서드명, 반환타입, 매개변수가 동일해야함
2. 부모클래스의 메서드보다 접근 제한범위를 줄일 수 있음

